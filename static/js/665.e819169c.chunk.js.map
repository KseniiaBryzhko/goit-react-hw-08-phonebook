{"version":3,"file":"static/js/665.e819169c.chunk.js","mappings":"mTAGaA,GAAiBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,0VAcdE,EAAQF,EAAAA,EAAAA,MAAH,4QAaLG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mXAkBLK,EAAYL,EAAAA,EAAAA,OAAH,q0BAwCTM,GAAqBN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,yH,6IC5ElBQ,EAAe,WAC1B,IAMMC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAEHG,QACC,yHACA,8DAEDC,WACHC,MAAOL,EAAAA,KAAaK,MAAM,+BAA+BD,WACzDE,SAAUN,EAAAA,KAEPO,IAAI,EAAG,+CACPH,aAGCI,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,cA9BkB,CACpBR,KAAM,GACNG,MAAO,GACPC,SAAU,IA4BRP,iBAAkBA,EAClBY,SATiB,SAAC,EAA2BC,GAAY,IAArCV,EAAoC,EAApCA,KAAMG,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SACnCE,GAASK,EAAAA,EAAAA,IAAS,CAAEX,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,KACjCM,EAAOE,WACR,EAGC,UAKE,UAAC,KAAD,CAAgBC,aAAa,MAA7B,WACE,UAAC,KAAD,uBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOd,KAAK,UACxB,SAAC,KAAD,CAAoBA,KAAK,OAAOe,UAAU,YAE5C,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOD,KAAK,QAAQd,KAAK,WACzB,SAAC,KAAD,CAAoBA,KAAK,QAAQe,UAAU,YAE7C,UAAC,KAAD,uBAEE,SAAC,KAAD,CAAOD,KAAK,WAAWd,KAAK,cAC5B,SAAC,KAAD,CAAoBA,KAAK,WAAWe,UAAU,YAEhD,SAAC,KAAD,CAAWD,KAAK,SAAhB,0BAIP,EChEc,SAASE,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACrB,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const AddContactForm = styled(Form)`\n  padding: 30px 60px 30px 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  width: 30vw;\n  border-radius: 5px;\n  box-shadow: -10px -10px 20px 0px #fff9, -4px -4px 5px 0px #fff9,\n    7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;\n  margin: 0 auto;\n  margin-bottom: 40px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  color: #353535;\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Cormorant Garamond', serif;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nexport const Input = styled(Field)`\n  width: 20vw;\n  height: 24px;\n  margin-top: 10px;\n  padding: 8px;\n  font-size: 20px;\n  border: none;\n  outline: 2px solid #ffffff;\n  border-radius: 5px;\n  background-color: #ffffff;\n  color: #212121;\n  transition: all cubic-bezier(0.25s, 0.7, 0.98, 0.86) 0s;\n  &:focus {\n    outline: 2px solid #d4dae3;\n    border-radius: 5px;\n  }\n`;\n\nexport const AddButton = styled.button`\n  outline: none;\n  padding: 10px 25px;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-block;\n  color: #353535;\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Cormorant Garamond', serif;\n  border: 1px solid #d4dae3;\n  border-radius: 4px;\n  z-index: 1;\n  position: relative;\n  width: 15vw;\n  margin: 0 auto;\n  margin-top: 10px;\n  &:after {\n    position: absolute;\n    content: '';\n    width: 100%;\n    height: 0;\n    bottom: 0;\n    left: 0;\n    z-index: -1;\n    box-shadow: -10px -10px 20px 0px #fff9, -4px -4px 5px 0px #fff9,\n      7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;\n    border-radius: 4px;\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #000;\n  }\n  &:hover:after {\n    top: 0;\n    height: 100%;\n  }\n`;\n\nexport const CustomErrorMessage = styled(ErrorMessage)`\n  text-align: center;\n  font-size: 16px;\n  max-width: 20vw;\n  color: red;\n  margin-top: 8px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  AddContactForm,\n  Label,\n  Input,\n  AddButton,\n  CustomErrorMessage,\n} from 'components/ContactForm/ContactForm.styled.js';\n\nexport const RegisterForm = () => {\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .matches(\n        \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        'Name may contain only letters, apostrophe, dash and spaces'\n      )\n      .required(),\n    email: yup.string().email('Email must be a valid email').required(),\n    password: yup\n      .string()\n      .min(7, 'Password must contain at least 7 characters')\n      .required(),\n  });\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, email, password }, action) => {\n    dispatch(register({ name, email, password }));\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <AddContactForm autoComplete=\"off\">\n        <Label>\n          Username\n          <Input type=\"text\" name=\"name\" />\n          <CustomErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Email\n          <Input type=\"email\" name=\"email\" />\n          <CustomErrorMessage name=\"email\" component=\"div\" />\n        </Label>\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" />\n          <CustomErrorMessage name=\"password\" component=\"div\" />\n        </Label>\n        <AddButton type=\"submit\">Register</AddButton>\n      </AddContactForm>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["AddContactForm","styled","Form","Label","Input","Field","AddButton","CustomErrorMessage","ErrorMessage","RegisterForm","validationSchema","yup","shape","name","matches","required","email","password","min","dispatch","useDispatch","initialValues","onSubmit","action","register","resetForm","autoComplete","type","component","Register","Helmet"],"sourceRoot":""}