{"version":3,"file":"static/js/971.26c91f1c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filters;\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const AddContactForm = styled(Form)`\n  padding: 30px 60px 30px 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  width: 30vw;\n  border-radius: 5px;\n  box-shadow: -10px -10px 20px 0px #fff9, -4px -4px 5px 0px #fff9,\n    7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;\n  margin: 0 auto;\n  margin-bottom: 40px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  color: #353535;\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Cormorant Garamond', serif;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nexport const Input = styled(Field)`\n  width: 20vw;\n  height: 24px;\n  margin-top: 10px;\n  padding: 8px;\n  font-size: 20px;\n  border: none;\n  outline: 2px solid #ffffff;\n  border-radius: 5px;\n  background-color: #ffffff;\n  color: #212121;\n  transition: all cubic-bezier(0.25s, 0.7, 0.98, 0.86) 0s;\n  &:focus {\n    outline: 2px solid #d4dae3;\n    border-radius: 5px;\n  }\n`;\n\nexport const AddButton = styled.button`\n  outline: none;\n  padding: 10px 25px;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-block;\n  color: #353535;\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Cormorant Garamond', serif;\n  border: 1px solid #d4dae3;\n  border-radius: 4px;\n  z-index: 1;\n  position: relative;\n  width: 15vw;\n  margin: 0 auto;\n  margin-top: 10px;\n  &:after {\n    position: absolute;\n    content: '';\n    width: 100%;\n    height: 0;\n    bottom: 0;\n    left: 0;\n    z-index: -1;\n    box-shadow: -10px -10px 20px 0px #fff9, -4px -4px 5px 0px #fff9,\n      7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;\n    border-radius: 4px;\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #000;\n  }\n  &:hover:after {\n    top: 0;\n    height: 100%;\n  }\n`;\n\nexport const CustomErrorMessage = styled(ErrorMessage)`\n  text-align: center;\n  font-size: 16px;\n  max-width: 20vw;\n  color: red;\n  margin-top: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport {\n  AddContactForm,\n  Label,\n  Input,\n  AddButton,\n  CustomErrorMessage,\n} from './ContactForm.styled.js';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nexport const ContactForm = () => {\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .matches(\n        \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        'Name may contain only letters, apostrophe, dash and spaces'\n      )\n      .required(),\n    number: yup\n      .string()\n      .matches(\n        '^[+]?[(]?[0-9]{1,4}[)]?[-s.]?[0-9]{1,4}[-s.]?[0-9]{1,6}$',\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(),\n  });\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = ({ name, number }, action) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in list`);\n      action.resetForm();\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleFormSubmit}\n    >\n      <AddContactForm>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <CustomErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <CustomErrorMessage name=\"number\" component=\"div\" />\n        </Label>\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </AddContactForm>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  text-align: center;\n  color: #353535;\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Cormorant Garamond', serif;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  outline: none;\n  padding: 10px 25px;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-block;\n  color: #353535;\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Cormorant Garamond', serif;\n  border: 1px solid #d4dae3;\n  border-radius: 4px;\n  z-index: 1;\n  position: relative;\n  &:after {\n    position: absolute;\n    content: '';\n    width: 100%;\n    height: 0;\n    bottom: 0;\n    left: 0;\n    z-index: -1;\n    box-shadow: -10px -10px 20px 0px #fff9, -4px -4px 5px 0px #fff9,\n      7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;\n    border-radius: 4px;\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #000;\n  }\n  &:hover:after {\n    top: 0;\n    height: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ListItem, DeleteButton } from './ContactItem.styled.js';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      {name}: {number}\n      <DeleteButton\n        onClick={() => {\n          dispatch(deleteContact(id));\n        }}\n      >\n        Delete\n      </DeleteButton>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 30px 60px 30px 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  width: 30vw;\n  border-radius: 5px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { List } from './ContactList.styled.js';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filtered = useSelector(getFilter);\n\n  const filteredContacts = (() => {\n    const normalizedFilter = filtered.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  })();\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  text-align: center;\n  color: #353535;\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Cormorant Garamond', serif;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nexport const FilterInput = styled.input`\n  width: 20vw;\n  height: 24px;\n  margin: 20px auto;\n  padding: 8px;\n  font-size: 20px;\n  border: none;\n  outline: 2px solid #ffffff;\n  border-radius: 5px;\n  background-color: #ffffff;\n  color: #212121;\n  transition: all cubic-bezier(0.25s, 0.7, 0.98, 0.86) 0s;\n  &:focus {\n    outline: 2px solid #d4dae3;\n    border-radius: 5px;\n  }\n`;\n","import { setFilter } from 'redux/contacts/filtersSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterLabel, FilterInput } from './Filter.styled.js';\n\nexport const Filter = () => {\n  const filtered = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const newFilterValue = event.target.value;\n    dispatch(setFilter(newFilterValue));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        onChange={handleFilterChange}\n        value={filtered}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </FilterLabel>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Phonebook = styled.div`\n  padding: 40px;\n  font-size: 30px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading, getFilter } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  Phonebook,\n  Title,\n  ContactsTitle,\n  Message,\n} from 'components/App.styled.js';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <Phonebook>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter value={filter}></Filter>{' '}\n        {(isLoading && !error && (\n          <>\n            <Message>Loading...</Message>\n          </>\n        )) || <ContactList />}\n        {error && <Message>Something went wrong. Please try again!</Message>}\n      </Phonebook>\n\n      {/* <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList /> */}\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filters","AddContactForm","styled","Form","Label","Input","Field","AddButton","CustomErrorMessage","ErrorMessage","ContactForm","validationSchema","yup","shape","name","matches","required","number","useSelector","dispatch","useDispatch","initialValues","onSubmit","action","find","contact","toLowerCase","alert","resetForm","addContact","type","component","ListItem","DeleteButton","ContactItem","id","onClick","deleteContact","List","ContactList","filtered","filteredContacts","normalizedFilter","filter","includes","map","FilterLabel","FilterInput","Filter","onChange","event","newFilterValue","target","value","setFilter","Phonebook","Title","ContactsTitle","Message","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}